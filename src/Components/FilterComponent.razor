<RgfFilterComponent @ref="_rgfFilterRef" EntityParameters="EntityParameters">
    <FilterTemplate Context="RgfFilterComp">
        <FilterConditionComponent FilterComponent="RgfFilterComp" Condition="RgfFilterComp.Condition" />
    </FilterTemplate>
    <FooterTemplate Context="RgfFilterComp">
        <div class="rg-filter-settings">
            <div class="rg-filter-sqltimeout">
                <label class="col-form-label text-nowrap pe-1">Query timeout</label>
                <RgfInputNumber TValue="int?" @bind-Value="RgfFilterComp.PredefinedFilter.QueryTimeout" HideSpinButton="true" Min="0" />
            </div>
            <div class="rg-predef-name input-group input-group-sm">
                <RgfComboBox TValue="string" Value="@RgfFilterComp.PredefinedFilterName" Text="@RgfFilterComp.PredefinedFilterName" AllowCustom="true"
                             DataSource="RgfFilterComp.FilterHandler.PredefinedFilters.Select(e=> new KeyValuePair<string, string>(e.Key, e.Name))"
                             InputChanged="OnInputChanged" />
            </div>
            <div class="rg-predef-save">
                <div class="p-1">
                    <RgfCheckBox Label="@RecroDict.GetRgfUiString("Public")" Reverse="true" WrapperCssClass="d-flex flex-row-reverse align-items-center"
                                 @bind-Value="RgfFilterComp.PredefinedFilter.IsGlobal" Disabled="!RgfFilterComp.IsPredefinedFilterAdmin" />
                </div>
                <div>
                    <RgfButton IconName="bi-floppy" CssClass="btn-success" Title="@RecroDict.GetRgfUiString("Save")"
                               Disabled="string.IsNullOrEmpty(RgfFilterComp.PredefinedFilter.Name) || !RgfFilterComp.IsPredefinedFilterAdmin && RgfFilterComp.PredefinedFilter.IsGlobal"
                               OnClick="(arg) => RgfFilterComp.OnSavePredefinedFilter()" />
                    <RgfButton IconName="bi-trash" CssClass="btn-danger" Title="@RecroDict.GetRgfUiString("Delete")"
                               Disabled="string.IsNullOrEmpty(RgfFilterComp.PredefinedFilter.Key) || !RgfFilterComp.IsPredefinedFilterAdmin && RgfFilterComp.PredefinedFilter.IsGlobal"
                               OnClick="(arg) => RgfFilterComp.OnDeletePredefinedFilter()" />
                </div>
            </div>
        </div>
        <div class="rg-filter-save">
            <div class="p-1 checkbox-lg">
                <RgfCheckBox Switch="true" @bind-Value="RgfFilterComp.IsFilterActive" Label="@($"{RecroDict.GetRgfUiString("Off")}/{RecroDict.GetRgfUiString("On")}")" />
            </div>
            <div class="d-flex justify-content-end">
                <div class="p-1">
                    <RgfButton CssClass="btn-secondary" MinWidth="4rem" Label="@RecroDict.GetRgfUiString("Cancel")" OnClick="RgfFilterComp.OnCancel" />
                </div>
                <div class="p-1">
                    <RgfButton CssClass="btn-primary" MinWidth="4rem" Label="OK" OnClick="RgfFilterComp.OnOk" />
                </div>
            </div>
        </div>
    </FooterTemplate>
</RgfFilterComponent>

@inject IRecroDictService RecroDict
@code {

    [Parameter, EditorRequired]
    public RgfEntityParameters EntityParameters { get; set; } = null!;

    private IRgManager Manager => EntityParameters.Manager!;
    private RgfFilterParameters FilterParameters { get => EntityParameters.FilterParameters; }

    private RgfFilterComponent _rgfFilterRef { get; set; } = null!;

    private void OnInputChanged(KeyValuePair<object?, string> item)
    {
        _rgfFilterRef.OnSetPredefinedFilter(item.Key?.ToString(), item.Value);
    }
}