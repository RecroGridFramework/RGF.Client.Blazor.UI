@if (!string.IsNullOrEmpty(Label))
{
    <label for="@Id" class="@($"form-label {LabelCssClass ?? ""}".TrimEnd())">@Label</label>
}
@if (Multiline)
{
    <InputTextArea Value="@Value" ValueExpression="ValueExpression" ValueChanged="OnValueChanged" DisplayName="@DisplayName" AdditionalAttributes="_attributes" />
}
else
{
    <InputText Value="@Value" ValueExpression="ValueExpression" ValueChanged="OnValueChanged" DisplayName="@DisplayName" AdditionalAttributes="_attributes" />
}

@inherits RgfInput<string>
@code {

    [Parameter]
    public bool Multiline { get; set; } = default;

    [Parameter]
    public bool Password { get; set; } = default;

    [Parameter]
    public int? MaxLength { get; set; }

    protected override void OnParametersSet()
    {
        _baseCssClass = "form-control form-control-sm";

        if (Password)
        {
            AdditionalAttributes["type"] = "password";
        }

        if (MaxLength != null && MaxLength > 0)
        {
            AdditionalAttributes["maxlength"] = MaxLength;
        }

        base.OnParametersSet();
    }
}