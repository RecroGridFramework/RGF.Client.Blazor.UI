@if (!string.IsNullOrEmpty(Label))
{
    <label for="@Id" class="@($"form-label {LabelCssClass ?? ""}".TrimEnd())">@Label</label>
}
<InputDate @ref="_inputRef" TValue="TValue" Type="DateType" Value="@Value" ValueExpression="ValueExpression" ValueChanged="OnValueChanged" DisplayName="@DisplayName" AdditionalAttributes="_attributes" />

@typeparam TValue
@inherits RgfInput<TValue>
@code {

    [Parameter]
    public InputDateType DateType { get; set; } = InputDateType.Date;

    private InputDate<TValue>? _inputRef { get; set; }

    protected override void OnParametersSet()
    {
        _baseCssClass = "form-control form-control-sm";

        base.OnParametersSet();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        _elementReference = _inputRef?.Element;
        return base.OnAfterRenderAsync(firstRender);
    }
}
